# 2. Дан список:
# ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
#
# Необходимо его обработать — обособить каждое целое число (вещественные не трогаем) кавычками
# (добавить кавычку до и кавычку после элемента списка, являющегося числом) и дополнить нулём до двух целочисленных разрядов:
# ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']
#
# Сформировать из обработанного списка строку:
# в "05" часов "17" минут температура воздуха была "+05" градусов
#
# Подумать, какое условие записать, чтобы выявить числа среди элементов списка?
# Как модифицировать это условие для чисел со знаком?
# Примечание: если обособление чисел кавычками не будет получаться - можете вернуться к его реализации позже.
# Главное: дополнить числа до двух разрядов нулём!
# 3. * (вместо задачи 2) Решить задачу 2 не создавая новый список (как говорят, in place).
# Эта задача намного серьёзнее, чем может сначала показаться.


list_1 = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
new_list = []
for item in list_1:
    number = ''
    diff_1 = ''
    diff_2 = ''
    for s in item:
        if s in '0123456789':
            number += s
        else:
            if number:
                diff_2 += s
            else:
                diff_1 += s
    if not number:
        new_list.append(item)
        continue
    number = f'{diff_1}{int(number):02d}{diff_2}'
    new_list.append('"'), new_list.append(number), new_list.append('"')
print(new_list)
resoult = ' '.join(new_list)
resoult_2 = ''
i = 0
while i < len(resoult):
    if resoult[i] == '"' and i < len(resoult) - 3 and resoult[i + 1] == ' ' and resoult[i + 2] in '0123456789-+':
        resoult_2 += '"'
        i += 1
    elif resoult[i] == '"' and i > 1 and resoult[i - 1] == ' ' and resoult[i - 2] in '0123456789':
        resoult_2 = resoult_2[:-1] + '"'
    else:
        resoult_2 += resoult[i]
    i += 1
print(resoult_2)
